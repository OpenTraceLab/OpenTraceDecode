<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="a00053" kind="file" language="C++">
    <compoundname>otd.c</compoundname>
    <includes local="no">config.h</includes>
    <includes refid="a00062" local="yes">libopentracedecode-internal.h</includes>
    <includes local="no">opentracedecode/libopentracedecode.h</includes>
    <includes local="no">glib.h</includes>
    <incdepgraph>
      <node id="3">
        <label>libopentracedecode-internal.h</label>
        <link refid="a00062"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/otd.c</label>
        <link refid="a00053"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Python.h</label>
      </node>
      <node id="2">
        <label>config.h</label>
      </node>
      <node id="6">
        <label>glib.h</label>
      </node>
      <node id="5">
        <label>opentracedecode/libopentracedecode.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <member refid="a00087_1gad7458a5fc78be4470411c557fd7efa77" kind="function"><name>searchpath_add_xdg_dir</name></member>
      <member refid="a00087_1gaf2242488d82c6de683e36827f0ca309e" kind="function"><name>print_versions</name></member>
      <member refid="a00087_1ga03cf99da57b0505596ec874dcbe8a3e8" kind="function"><name>print_searchpaths</name></member>
      <member refid="a00087_1ga67fdfc4ec132b22cec05a0e7bc1ddd84" kind="function"><name>otd_init</name></member>
      <member refid="a00087_1ga0bd34898b2a5e89786ccd660e8531fe3" kind="function"><name>otd_session_destroy_cb</name></member>
      <member refid="a00087_1ga69b20ec5173c2ad80d51b54727b6b07e" kind="function"><name>otd_exit</name></member>
      <member refid="a00087_1gad8940cb716329201a468e14f3c75747e" kind="function"><name>otd_decoder_searchpath_add</name></member>
      <member refid="a00087_1ga3360236fc45072044f24ba1ef274cf0b" kind="function"><name>otd_searchpaths_get</name></member>
    </sectiondef>
    <briefdescription>
<para>Initializing and shutting down libopentracedecode. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>libopentracedecode<sp/>project.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2010<sp/>Uwe<sp/>Hermann<sp/>&lt;uwe@hermann-uwe.de&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2013<sp/>Bert<sp/>Vermeulen<sp/>&lt;bert@biot.com&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="a00062" kindref="compound">libopentracedecode-internal.h</ref>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>First,<sp/>so<sp/>we<sp/>avoid<sp/>a<sp/>_POSIX_C_SOURCE<sp/>warning.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opentracedecode/libopentracedecode.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">/**<sp/>@cond<sp/>PRIVATE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Python<sp/>module<sp/>search<sp/>paths<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="a00258_1a3a90167f4b0b0cb829b5b15e0663af50" kindref="member">OTD_PRIV</ref><sp/>GSList<sp/>*searchpaths<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>session.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="a00258_1a3a90167f4b0b0cb829b5b15e0663af50" kindref="member">OTD_PRIV</ref><sp/>GSList<sp/>*sessions;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="a00258_1a3a90167f4b0b0cb829b5b15e0663af50" kindref="member">OTD_PRIV</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_session_id;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="35"><highlight class="comment">/**<sp/>@endcond<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="37"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>@mainpage<sp/>libopentracedecode<sp/>API</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>@section<sp/>sec_intro<sp/>Introduction</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>The<sp/>&lt;a<sp/>href=&quot;http://sigrok.org&quot;&gt;sigrok&lt;/a&gt;<sp/>project<sp/>aims<sp/>at<sp/>creating<sp/>a</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>portable,<sp/>cross-platform,<sp/>Free/Libre/Open-Source<sp/>signal<sp/>analysis<sp/>software</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>suite<sp/>that<sp/>supports<sp/>various<sp/>device<sp/>types<sp/>(such<sp/>as<sp/>logic<sp/>analyzers,</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>oscilloscopes,<sp/>multimeters,<sp/>and<sp/>more).</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>&lt;a<sp/>href=&quot;http://sigrok.org/wiki/Libsigrokdecode&quot;&gt;libopentracedecode&lt;/a&gt;<sp/>is<sp/>a</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>shared<sp/>library<sp/>written<sp/>in<sp/>C<sp/>which<sp/>provides<sp/>the<sp/>basic<sp/>API<sp/>for<sp/>(streaming)</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>protocol<sp/>decoding<sp/>functionality.</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>The<sp/>&lt;a<sp/>href=&quot;http://sigrok.org/wiki/Protocol_decoders&quot;&gt;protocol<sp/>decoders&lt;/a&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>are<sp/>written<sp/>in<sp/>Python<sp/>(&gt;=<sp/>3.0).</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>@section<sp/>sec_api<sp/>API<sp/>reference</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>&quot;Modules&quot;<sp/>page<sp/>for<sp/>an<sp/>introduction<sp/>to<sp/>various<sp/>libopentracedecode</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>related<sp/>topics<sp/>and<sp/>the<sp/>detailed<sp/>API<sp/>documentation<sp/>of<sp/>the<sp/>respective</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>functions.</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>You<sp/>can<sp/>also<sp/>browse<sp/>the<sp/>API<sp/>documentation<sp/>by<sp/>file,<sp/>or<sp/>review<sp/>all</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>data<sp/>structures.</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>@section<sp/>sec_mailinglists<sp/>Mailing<sp/>lists</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>There<sp/>is<sp/>one<sp/>mailing<sp/>list<sp/>for<sp/>sigrok/libopentracedecode:<sp/>&lt;a<sp/>href=&quot;https://lists.sourceforge.net/lists/listinfo/sigrok-devel&quot;&gt;sigrok-devel&lt;/a&gt;.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>@section<sp/>sec_irc<sp/>IRC</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>You<sp/>can<sp/>find<sp/>the<sp/>sigrok<sp/>developers<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>&lt;a<sp/>href=&quot;ircs://irc.libera.chat/#sigrok&quot;&gt;\#sigrok&lt;/a&gt;</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>IRC<sp/>channel<sp/>on<sp/>Libera.Chat.</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>@section<sp/>sec_website<sp/>Website</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>&lt;a<sp/>href=&quot;http://sigrok.org/wiki/Libsigrokdecode&quot;&gt;sigrok.org/wiki/Libsigrokdecode&lt;/a&gt;</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="78"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/>Initializing<sp/>and<sp/>shutting<sp/>down<sp/>libopentracedecode.</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="84"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/>@defgroup<sp/>grp_init<sp/>Initialization</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/>Initializing<sp/>and<sp/>shutting<sp/>down<sp/>libopentracedecode.</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/>Before<sp/>using<sp/>any<sp/>of<sp/>the<sp/>libopentracedecode<sp/>functionality,<sp/>otd_init()<sp/>must</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/>be<sp/>called<sp/>to<sp/>initialize<sp/>the<sp/>library.</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*<sp/>When<sp/>libopentracedecode<sp/>functionality<sp/>is<sp/>no<sp/>longer<sp/>needed,<sp/>otd_exit()<sp/>should</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/>be<sp/>called.</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>searchpath_add_xdg_dir(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*datadir)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*decdir;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decdir<sp/>=<sp/>g_build_filename(datadir,<sp/><ref refid="a00270_1af415af6bfede0e8d5453708afe68651c" kindref="member">PACKAGE_TARNAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;decoders&quot;</highlight><highlight class="normal">,<sp/>NULL);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g_file_test(decdir,<sp/>G_FILE_TEST_IS_DIR))</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="a00087_1gad8940cb716329201a468e14f3c75747e" kindref="member">otd_decoder_searchpath_add</ref>(decdir);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="a00258_1a375ed93b6afe588cc8c67b21318e7ebcafcf78f6457d3099b0fc89415a3f9eaa5" kindref="member">OTD_OK</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Just<sp/>ignore<sp/>non-existing<sp/>directory.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_free(decdir);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print_versions(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GString<sp/>*s;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GSList<sp/>*l,<sp/>*l_orig,<sp/>*m;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lib,<sp/>*version;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00062_1abe0db3bab3b85f46343afb04b24d59a2" kindref="member">otd_dbg</ref>(</highlight><highlight class="stringliteral">&quot;libopentracedecode<sp/>%s/%s<sp/>(rt:<sp/>%s/%s).&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00270_1ac06306b00b13a4fba1e354a28adc6887" kindref="member">OTD_PACKAGE_VERSION_STRING</ref>,<sp/><ref refid="a00270_1a575097d427a201646adbbb589a6f770c" kindref="member">OTD_LIB_VERSION_STRING</ref>,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00089_1ga543544071fe659c4e8830a0adf736dd5" kindref="member">otd_package_version_string_get</ref>(),<sp/><ref refid="a00089_1gad586aa40dd763ea132c87dd5adebfe28" kindref="member">otd_lib_version_string_get</ref>());</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>g_string_sized_new(200);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_string_append(s,<sp/></highlight><highlight class="stringliteral">&quot;Libs:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_orig<sp/>=<sp/><ref refid="a00089_1gab8b1b7100e1b1a4cfe20ba5607320e35" kindref="member">otd_buildinfo_libs_get</ref>();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>l_orig;<sp/>l;<sp/>l<sp/>=<sp/>l-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>l-&gt;data;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lib<sp/>=<sp/>m-&gt;data;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>version<sp/>=<sp/>m-&gt;next-&gt;data;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_string_append_printf(s,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>%s,<sp/>&quot;</highlight><highlight class="normal">,<sp/>lib,<sp/>version);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_slist_free_full(m,<sp/>g_free);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_slist_free(l_orig);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;str[s-&gt;len<sp/>-<sp/>2]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;str[s-&gt;len<sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00062_1abe0db3bab3b85f46343afb04b24d59a2" kindref="member">otd_dbg</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>s-&gt;str);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_string_free(s,<sp/><ref refid="a00029_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/><ref refid="a00089_1ga198f95837dba3e3116765bc9f9756a8b" kindref="member">otd_buildinfo_host_get</ref>();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00062_1abe0db3bab3b85f46343afb04b24d59a2" kindref="member">otd_dbg</ref>(</highlight><highlight class="stringliteral">&quot;Host:<sp/>%s.&quot;</highlight><highlight class="normal">,<sp/>str);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_free(str);</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>print_searchpaths(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*py_paths,<sp/>*py_path,<sp/>*py_bytes;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyGILState_STATE<sp/>gstate;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GString<sp/>*s;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GSList<sp/>*l;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>g_string_sized_new(500);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_string_append(s,<sp/></highlight><highlight class="stringliteral">&quot;Protocol<sp/>decoder<sp/>search<sp/>paths:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>searchpaths;<sp/>l;<sp/>l<sp/>=<sp/>l-&gt;next)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_string_append_printf(s,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)l-&gt;data);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;str[s-&gt;len<sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00062_1abe0db3bab3b85f46343afb04b24d59a2" kindref="member">otd_dbg</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>s-&gt;str);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_string_free(s,<sp/><ref refid="a00029_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gstate<sp/>=<sp/>PyGILState_Ensure();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_paths<sp/>=<sp/>PySys_GetObject(</highlight><highlight class="stringliteral">&quot;path&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!py_paths)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>g_string_sized_new(500);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_string_append(s,<sp/></highlight><highlight class="stringliteral">&quot;Python<sp/>system<sp/>search<sp/>paths:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>PyList_Size(py_paths);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_path<sp/>=<sp/>PyList_GetItem(py_paths,<sp/>i);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_bytes<sp/>=<sp/>PyUnicode_AsUTF8String(py_path);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_string_append_printf(s,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>PyBytes_AsString(py_bytes));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(py_bytes);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;str[s-&gt;len<sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00062_1abe0db3bab3b85f46343afb04b24d59a2" kindref="member">otd_dbg</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>s-&gt;str);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_string_free(s,<sp/><ref refid="a00029_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyGILState_Release(gstate);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00258_1a375ed93b6afe588cc8c67b21318e7ebcafcf78f6457d3099b0fc89415a3f9eaa5" kindref="member">OTD_OK</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal">err:</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00062_1adfd45428ae0a51e6162ff442c97dbce7" kindref="member">otd_err</ref>(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>query<sp/>Python<sp/>system<sp/>search<sp/>paths.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyGILState_Release(gstate);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00258_1a375ed93b6afe588cc8c67b21318e7ebcaaecfc1f18b22e996112bec32462cb5d5" kindref="member">OTD_ERR_PYTHON</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="192"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*<sp/>Initialize<sp/>libopentracedecode.</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*<sp/>This<sp/>initializes<sp/>the<sp/>Python<sp/>interpreter,<sp/>and<sp/>creates<sp/>and<sp/>initializes</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*<sp/>a<sp/>&quot;sigrokdecode&quot;<sp/>Python<sp/>module.</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*<sp/>Then,<sp/>it<sp/>searches<sp/>for<sp/>sigrok<sp/>protocol<sp/>decoders<sp/>in<sp/>the<sp/>&quot;decoders&quot;</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*<sp/>subdirectory<sp/>of<sp/>the<sp/>the<sp/>libopentracedecode<sp/>installation<sp/>directory.</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*<sp/>All<sp/>decoders<sp/>that<sp/>are<sp/>found<sp/>are<sp/>loaded<sp/>into<sp/>memory<sp/>and<sp/>added<sp/>to<sp/>an</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*<sp/>internal<sp/>list<sp/>of<sp/>decoders,<sp/>which<sp/>can<sp/>be<sp/>queried<sp/>via<sp/>otd_decoder_list().</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*<sp/>The<sp/>caller<sp/>is<sp/>responsible<sp/>for<sp/>calling<sp/>the<sp/>clean-up<sp/>function<sp/>otd_exit(),</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/>which<sp/>will<sp/>properly<sp/>shut<sp/>down<sp/>libopentracedecode<sp/>and<sp/>free<sp/>its<sp/>allocated<sp/>memory.</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/>Multiple<sp/>calls<sp/>to<sp/>otd_init(),<sp/>without<sp/>calling<sp/>otd_exit()<sp/>in<sp/>between,</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*<sp/>are<sp/>not<sp/>allowed.</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*<sp/>@param<sp/>path<sp/>Path<sp/>to<sp/>an<sp/>extra<sp/>directory<sp/>containing<sp/>protocol<sp/>decoders</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>which<sp/>will<sp/>be<sp/>added<sp/>to<sp/>the<sp/>Python<sp/>sys.path.<sp/>May<sp/>be<sp/>NULL.</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*<sp/>@return<sp/>OTD_OK<sp/>upon<sp/>success,<sp/>a<sp/>(negative)<sp/>error<sp/>code<sp/>otherwise.</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Upon<sp/>Python<sp/>errors,<sp/>OTD_ERR_PYTHON<sp/>is<sp/>returned.<sp/>If<sp/>the<sp/>decoders</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>directory<sp/>cannot<sp/>be<sp/>accessed,<sp/>OTD_ERR_DECODERS_DIR<sp/>is<sp/>returned.</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>not<sp/>enough<sp/>memory<sp/>could<sp/>be<sp/>allocated,<sp/>OTD_ERR_MALLOC<sp/>is<sp/>returned.</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*<sp/>@since<sp/>0.1.0</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="a00087_1ga67fdfc4ec132b22cec05a0e7bc1ddd84" refkind="member"><highlight class="normal"><ref refid="a00258_1ab6fe8fd245a46558f9f1858611a03522" kindref="member">OTD_API</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a00087_1ga67fdfc4ec132b22cec05a0e7bc1ddd84" kindref="member">otd_init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*sys_datadirs;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*env_path;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_session_id<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00062_1adfd45428ae0a51e6162ff442c97dbce7" kindref="member">otd_err</ref>(</highlight><highlight class="stringliteral">&quot;libopentracedecode<sp/>is<sp/>already<sp/>initialized.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00258_1a375ed93b6afe588cc8c67b21318e7ebcad6e315777c65836ac7489ddb503aceab" kindref="member">OTD_ERR</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_versions();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00062_1abe0db3bab3b85f46343afb04b24d59a2" kindref="member">otd_dbg</ref>(</highlight><highlight class="stringliteral">&quot;Initializing<sp/>libopentracedecode.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>our<sp/>own<sp/>module<sp/>to<sp/>the<sp/>list<sp/>of<sp/>built-in<sp/>modules.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyImport_AppendInittab(</highlight><highlight class="stringliteral">&quot;opentracedecode&quot;</highlight><highlight class="normal">,<sp/><ref refid="a00062_1abc7bd38e0e284d3a3ba5e5e30ec3dfe1" kindref="member">PyInit_opentracedecode</ref>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>the<sp/>Python<sp/>interpreter.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_InitializeEx(0);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Locations<sp/>relative<sp/>to<sp/>the<sp/>XDG<sp/>system<sp/>data<sp/>directories.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys_datadirs<sp/>=<sp/>g_get_system_data_dirs();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>g_strv_length((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)sys_datadirs);<sp/>i<sp/>&gt;<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>searchpath_add_xdg_dir(sys_datadirs[i<sp/>-<sp/>1]);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/><ref refid="a00258_1a375ed93b6afe588cc8c67b21318e7ebcafcf78f6457d3099b0fc89415a3f9eaa5" kindref="member">OTD_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_Finalize();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DECODERS_DIR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Hardcoded<sp/>decoders<sp/>install<sp/>location,<sp/>if<sp/>defined.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ret<sp/>=<sp/><ref refid="a00087_1gad8940cb716329201a468e14f3c75747e" kindref="member">otd_decoder_searchpath_add</ref>(DECODERS_DIR))<sp/>!=<sp/><ref refid="a00258_1a375ed93b6afe588cc8c67b21318e7ebcafcf78f6457d3099b0fc89415a3f9eaa5" kindref="member">OTD_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_Finalize();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Location<sp/>relative<sp/>to<sp/>the<sp/>XDG<sp/>user<sp/>data<sp/>directory.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>searchpath_add_xdg_dir(g_get_user_data_dir());</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/><ref refid="a00258_1a375ed93b6afe588cc8c67b21318e7ebcafcf78f6457d3099b0fc89415a3f9eaa5" kindref="member">OTD_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_Finalize();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Path<sp/>specified<sp/>by<sp/>the<sp/>user.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ret<sp/>=<sp/><ref refid="a00087_1gad8940cb716329201a468e14f3c75747e" kindref="member">otd_decoder_searchpath_add</ref>(path))<sp/>!=<sp/><ref refid="a00258_1a375ed93b6afe588cc8c67b21318e7ebcafcf78f6457d3099b0fc89415a3f9eaa5" kindref="member">OTD_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_Finalize();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Environment<sp/>variable<sp/>overrides<sp/>everything,<sp/>for<sp/>debugging.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>TODO</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Is<sp/>the<sp/>comment<sp/>still<sp/>applicable<sp/>and<sp/>correct<sp/>or<sp/>up<sp/>to<sp/>date?</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>implementation<sp/>adds<sp/>paths<sp/>which<sp/>were<sp/>specified<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>env<sp/>var.<sp/>Which<sp/>can<sp/>shadow<sp/>files<sp/>in<sp/>other<sp/>locations,<sp/>or<sp/>can</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>extend<sp/>the<sp/>set<sp/>of<sp/>available<sp/>decoders.<sp/>Which<sp/>need<sp/>not<sp/>only</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>serve<sp/>for<sp/>development,<sp/>it<sp/>is<sp/>as<sp/>beneficial<sp/>to<sp/>regular<sp/>users.</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Without<sp/>shadowing<sp/>all<sp/>other<sp/>files<sp/>still<sp/>are<sp/>found.</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((env_path<sp/>=<sp/>g_getenv(</highlight><highlight class="stringliteral">&quot;SIGROKDECODE_DIR&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ret<sp/>=<sp/><ref refid="a00087_1gad8940cb716329201a468e14f3c75747e" kindref="member">otd_decoder_searchpath_add</ref>(env_path))<sp/>!=<sp/><ref refid="a00258_1a375ed93b6afe588cc8c67b21318e7ebcafcf78f6457d3099b0fc89415a3f9eaa5" kindref="member">OTD_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_Finalize();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env_path<sp/>=<sp/>g_getenv(</highlight><highlight class="stringliteral">&quot;SIGROKDECODE_PATH&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env_path)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**dir_list,<sp/>**dir_iter,<sp/>*dir_item;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir_list<sp/>=<sp/>g_strsplit(env_path,<sp/>G_SEARCHPATH_SEPARATOR_S,<sp/>0);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(dir_iter<sp/>=<sp/>dir_list;<sp/>*dir_iter;<sp/>dir_iter++)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir_item<sp/>=<sp/>*dir_iter;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dir_item<sp/>||<sp/>!*dir_item)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="a00087_1gad8940cb716329201a468e14f3c75747e" kindref="member">otd_decoder_searchpath_add</ref>(dir_item);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/><ref refid="a00258_1a375ed93b6afe588cc8c67b21318e7ebcafcf78f6457d3099b0fc89415a3f9eaa5" kindref="member">OTD_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_Finalize();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_strfreev(dir_list);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_VERSION_HEX<sp/>&lt;<sp/>0x03090000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Initialize<sp/>and<sp/>acquire<sp/>the<sp/>Python<sp/>GIL.<sp/>In<sp/>Python<sp/>3.7+<sp/>this</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>will<sp/>be<sp/>done<sp/>implicitly<sp/>as<sp/>part<sp/>of<sp/>the<sp/>Py_InitializeEx()</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>call<sp/>above.<sp/>PyEval_InitThreads()<sp/>was<sp/>deprecated<sp/>in<sp/>3.9.</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyEval_InitThreads();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Release<sp/>the<sp/>GIL<sp/>(ignore<sp/>return<sp/>value,<sp/>we<sp/>don&apos;t<sp/>need<sp/>it<sp/>here).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)PyEval_SaveThread();</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_session_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_searchpaths();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00258_1a375ed93b6afe588cc8c67b21318e7ebcafcf78f6457d3099b0fc89415a3f9eaa5" kindref="member">OTD_OK</ref>;</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>otd_session_destroy_cb(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ignored)</highlight></codeline>
<codeline lineno="325"><highlight class="normal">{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)ignored;<sp/></highlight><highlight class="comment">//<sp/>Prevent<sp/>unused<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00088_1gaff3d623695f72762cc7120228d4bf2b3" kindref="member">otd_session_destroy</ref>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="a00165" kindref="compound">otd_session</ref><sp/>*)arg);</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="330"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/>*<sp/>Shutdown<sp/>libopentracedecode.</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/>*<sp/>This<sp/>frees<sp/>all<sp/>the<sp/>memory<sp/>allocated<sp/>for<sp/>protocol<sp/>decoders<sp/>and<sp/>shuts<sp/>down</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/>*<sp/>the<sp/>Python<sp/>interpreter.</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>should<sp/>only<sp/>be<sp/>called<sp/>if<sp/>there<sp/>was<sp/>a<sp/>(successful!)<sp/>invocation</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/>*<sp/>of<sp/>otd_init()<sp/>before.<sp/>Calling<sp/>this<sp/>function<sp/>multiple<sp/>times<sp/>in<sp/>a<sp/>row,<sp/>without</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/>*<sp/>any<sp/>successful<sp/>otd_init()<sp/>calls<sp/>in<sp/>between,<sp/>is<sp/>not<sp/>allowed.</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/>*<sp/>@return<sp/>OTD_OK<sp/>upon<sp/>success,<sp/>a<sp/>(negative)<sp/>error<sp/>code<sp/>otherwise.</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/>*<sp/>@since<sp/>0.1.0</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="a00087_1ga69b20ec5173c2ad80d51b54727b6b07e" refkind="member"><highlight class="normal"><ref refid="a00258_1ab6fe8fd245a46558f9f1858611a03522" kindref="member">OTD_API</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a00087_1ga69b20ec5173c2ad80d51b54727b6b07e" kindref="member">otd_exit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="345"><highlight class="normal">{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00062_1abe0db3bab3b85f46343afb04b24d59a2" kindref="member">otd_dbg</ref>(</highlight><highlight class="stringliteral">&quot;Exiting<sp/>libopentracedecode.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_slist_foreach(sessions,<sp/>otd_session_destroy_cb,<sp/>NULL);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_slist_free(sessions);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sessions<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00083_1ga9552e97b41e89c206aa96aec52ee41e9" kindref="member">otd_decoder_unload_all</ref>();</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_slist_free_full(searchpaths,<sp/>g_free);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>searchpaths<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Acquire<sp/>the<sp/>GIL,<sp/>otherwise<sp/>Py_Finalize()<sp/>might<sp/>have<sp/>issues.</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Ignore<sp/>the<sp/>return<sp/>value,<sp/>we<sp/>don&apos;t<sp/>need<sp/>it<sp/>here.</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Py_IsInitialized())</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)PyGILState_Ensure();</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Py_Finalize()<sp/>returns<sp/>void,<sp/>any<sp/>finalization<sp/>errors<sp/>are<sp/>ignored.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_Finalize();</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note:<sp/>No<sp/>need<sp/>to<sp/>release<sp/>the<sp/>GIL<sp/>since<sp/>Python<sp/>is<sp/>shut<sp/>down<sp/>now.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_session_id<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00258_1a375ed93b6afe588cc8c67b21318e7ebcafcf78f6457d3099b0fc89415a3f9eaa5" kindref="member">OTD_OK</ref>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="373"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/>*<sp/>Add<sp/>an<sp/>additional<sp/>search<sp/>directory<sp/>for<sp/>the<sp/>protocol<sp/>decoders.</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/>*<sp/>The<sp/>specified<sp/>directory<sp/>is<sp/>prepended<sp/>(not<sp/>appended!)<sp/>to<sp/>Python&apos;s<sp/>sys.path,</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/>*<sp/>in<sp/>order<sp/>to<sp/>search<sp/>for<sp/>sigrok<sp/>protocol<sp/>decoders<sp/>in<sp/>the<sp/>specified</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/>*<sp/>directories<sp/>first,<sp/>and<sp/>in<sp/>the<sp/>generic<sp/>Python<sp/>module<sp/>directories<sp/>(and<sp/>in</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/>*<sp/>the<sp/>current<sp/>working<sp/>directory)<sp/>last.<sp/>This<sp/>avoids<sp/>conflicts<sp/>if<sp/>there<sp/>are</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>*<sp/>Python<sp/>modules<sp/>which<sp/>have<sp/>the<sp/>same<sp/>name<sp/>as<sp/>a<sp/>sigrok<sp/>protocol<sp/>decoder<sp/>in</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>*<sp/>sys.path<sp/>or<sp/>in<sp/>the<sp/>current<sp/>working<sp/>directory.</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/>*<sp/>@param<sp/>path<sp/>Path<sp/>to<sp/>the<sp/>directory<sp/>containing<sp/>protocol<sp/>decoders<sp/>which<sp/>shall</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>added<sp/>to<sp/>the<sp/>Python<sp/>sys.path,<sp/>or<sp/>NULL.</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/>*<sp/>@return<sp/>OTD_OK<sp/>upon<sp/>success,<sp/>a<sp/>(negative)<sp/>error<sp/>code<sp/>otherwise.</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/>*<sp/>@private</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="a00087_1gad8940cb716329201a468e14f3c75747e" refkind="member"><highlight class="normal"><ref refid="a00258_1a3a90167f4b0b0cb829b5b15e0663af50" kindref="member">OTD_PRIV</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="a00087_1gad8940cb716329201a468e14f3c75747e" kindref="member">otd_decoder_searchpath_add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)</highlight></codeline>
<codeline lineno="391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*py_cur_path,<sp/>*py_item;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyGILState_STATE<sp/>gstate;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00062_1abe0db3bab3b85f46343afb04b24d59a2" kindref="member">otd_dbg</ref>(</highlight><highlight class="stringliteral">&quot;Adding<sp/>&apos;%s&apos;<sp/>to<sp/>module<sp/>path.&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gstate<sp/>=<sp/>PyGILState_Ensure();</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_cur_path<sp/>=<sp/>PySys_GetObject(</highlight><highlight class="stringliteral">&quot;path&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!py_cur_path)</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py_item<sp/>=<sp/>PyUnicode_FromString(path);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!py_item)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otd_exception_catch(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>Unicode<sp/>object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyList_Insert(py_cur_path,<sp/>0,<sp/>py_item)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otd_exception_catch(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>insert<sp/>path<sp/>element&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(py_item);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(py_item);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyGILState_Release(gstate);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>searchpaths<sp/>=<sp/>g_slist_prepend(searchpaths,<sp/>g_strdup(path));</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00258_1a375ed93b6afe588cc8c67b21318e7ebcafcf78f6457d3099b0fc89415a3f9eaa5" kindref="member">OTD_OK</ref>;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal">err:</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyGILState_Release(gstate);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="a00258_1a375ed93b6afe588cc8c67b21318e7ebcaaecfc1f18b22e996112bec32462cb5d5" kindref="member">OTD_ERR_PYTHON</ref>;</highlight></codeline>
<codeline lineno="425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="427"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/>*<sp/>Return<sp/>the<sp/>list<sp/>of<sp/>protocol<sp/>decoder<sp/>search<sp/>paths.</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>list<sp/>of<sp/>search<sp/>paths<sp/>used<sp/>when<sp/>loading<sp/>protocol<sp/>decoders.</highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/>*<sp/>@since<sp/>0.5.1</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="a00087_1ga3360236fc45072044f24ba1ef274cf0b" refkind="member"><highlight class="normal"><ref refid="a00258_1ab6fe8fd245a46558f9f1858611a03522" kindref="member">OTD_API</ref><sp/>GSList<sp/>*<ref refid="a00087_1ga3360236fc45072044f24ba1ef274cf0b" kindref="member">otd_searchpaths_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="435"><highlight class="normal">{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GSList<sp/>*paths<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(GSList<sp/>*l<sp/>=<sp/>searchpaths;<sp/>l;<sp/>l<sp/>=<sp/>l-&gt;next)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paths<sp/>=<sp/>g_slist_append(paths,<sp/>g_strdup(l-&gt;data));</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>paths;</highlight></codeline>
<codeline lineno="442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="444"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/otd.c"/>
  </compounddef>
</doxygen>
