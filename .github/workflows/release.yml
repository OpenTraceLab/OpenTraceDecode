name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            name: linux
          - os: macos-14
            name: macos
          - os: windows-2022
            name: windows
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Linux deps
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y meson ninja-build pkg-config gcc g++ \
            libglib2.0-dev python3-dev

      - name: macOS deps
        if: runner.os == 'macOS'
        run: |
          brew install meson ninja pkg-config glib python3

      - name: MSYS2 setup
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-meson
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-glib2
            mingw-w64-x86_64-python3

      - name: Build (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          if [ "${{ runner.os }}" = "macOS" ]; then
            PREFIX=/usr/local
          else
            PREFIX=/usr
          fi
          meson setup build --buildtype=release --prefix=$PREFIX
          meson compile -C build
          DESTDIR="${PWD}/install" meson install -C build
          tar czf opentracedecode-${{ matrix.name }}.tar.gz -C install$PREFIX .

      - name: Build (Windows)
        if: runner.os == 'Windows'
        shell: msys2 {0}
        run: |
          meson setup build --buildtype=release --prefix=/mingw64
          meson compile -C build
          DESTDIR="${PWD}/install" meson install -C build
          MINGW_PATH=$(find install -type d -name mingw64 | head -1)
          tar czf opentracedecode-${{ matrix.name }}.tar.gz -C $MINGW_PATH .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: opentracedecode-${{ matrix.name }}
          path: opentracedecode-${{ matrix.name }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*/opentracedecode-*.tar.gz
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
